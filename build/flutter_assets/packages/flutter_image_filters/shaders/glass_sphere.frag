{
  "sksl": {
    "entrypoint": "glass_sphere_fragment_main",
    "shader": "// This SkSL shader is autogenerated by spirv-cross.\n\nfloat4 flutter_FragCoord;\n\nuniform vec2 inputCenter;\nuniform float inputRadius;\nuniform float inputAspectRatio;\nuniform float inputRefractiveIndex;\nuniform vec2 screenSize;\nuniform shader inputImageTexture;\nuniform half2 inputImageTexture_size;\n\nvec4 fragColor;\n\nvec2 FLT_flutter_local_FlutterFragCoord()\n{\n    return flutter_FragCoord.xy;\n}\n\nvoid FLT_main()\n{\n    vec2 textureCoordinate = FLT_flutter_local_FlutterFragCoord() / screenSize;\n    vec2 textureCoordinateToUse = vec2(textureCoordinate.x, ((textureCoordinate.y * inputAspectRatio) + 0.5) - (0.5 * inputAspectRatio));\n    float distanceFrominputCenter = distance(inputCenter, textureCoordinateToUse);\n    float checkForPresenceWithinSphere = step(distanceFrominputCenter, inputRadius);\n    distanceFrominputCenter /= inputRadius;\n    float normalizedDepth = inputRadius * sqrt(1.0 - (distanceFrominputCenter * distanceFrominputCenter));\n    vec3 sphereNormal = normalize(vec3(textureCoordinateToUse - inputCenter, normalizedDepth));\n    vec3 refractedVector = refract(vec3(0.0, 0.0, -1.0), sphereNormal, inputRefractiveIndex) * 2.0;\n    vec3 _89 = refractedVector;\n    vec2 _91 = -_89.xy;\n    refractedVector.x = _91.x;\n    refractedVector.y = _91.y;\n    vec3 finalSphereColor = inputImageTexture.eval(inputImageTexture_size * ( (refractedVector.xy + vec2(1.0)) * 0.5)).xyz;\n    float lightingIntensity = 2.5 * (1.0 - pow(clamp(dot(vec3(0.0, 0.0, 1.0), sphereNormal), 0.0, 1.0), 0.25));\n    finalSphereColor += vec3(lightingIntensity);\n    lightingIntensity = clamp(dot(vec3(-0.40824830532073974609375, 0.40824830532073974609375, 0.8164966106414794921875), sphereNormal), 0.0, 1.0);\n    lightingIntensity = pow(lightingIntensity, 15.0);\n    finalSphereColor += (vec3(0.800000011920928955078125) * lightingIntensity);\n    fragColor = vec4(finalSphereColor, 1.0) * checkForPresenceWithinSphere;\n}\n\nhalf4 main(float2 iFragCoord)\n{\n      flutter_FragCoord = float4(iFragCoord, 0, 0);\n      FLT_main();\n      return fragColor;\n}\n",
    "stage": 1,
    "uniforms": [
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 0,
        "name": "inputCenter",
        "rows": 2,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 0,
        "columns": 1,
        "location": 0,
        "name": "inputImageTexture",
        "rows": 1,
        "type": 12
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 1,
        "name": "inputRadius",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 2,
        "name": "inputAspectRatio",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 3,
        "name": "inputRefractiveIndex",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 4,
        "name": "screenSize",
        "rows": 2,
        "type": 10
      }
    ]
  }
}