{
  "sksl": {
    "entrypoint": "hald_lookup_fragment_main",
    "shader": "// This SkSL shader is autogenerated by spirv-cross.\n\nfloat4 flutter_FragCoord;\n\nuniform float inputIntensity;\nuniform vec2 screenSize;\nuniform shader inputImageTexture;\nuniform half2 inputImageTexture_size;\nuniform shader inputTextureCubeData;\nuniform half2 inputTextureCubeData_size;\n\nvec4 fragColor;\n\nvec2 FLT_flutter_local_FlutterFragCoord()\n{\n    return flutter_FragCoord.xy;\n}\n\nvec2 FLT_flutter_local_computeSliceOffset(float slice, vec2 sliceSize)\n{\n    return sliceSize * vec2(mod(slice, 8.0), floor(slice / 8.0));\n}\n\nvec4 FLT_flutter_local_sampleAs3DTexture(vec3 textureColor)\n{\n    float slice = textureColor.z * 511.0;\n    float zOffset = fract(slice);\n    float param = floor(slice);\n    vec2 param_1 = vec2(0.125, 0.015625);\n    vec2 slice0Offset = FLT_flutter_local_computeSliceOffset(param, param_1);\n    float param_2 = ceil(slice);\n    vec2 param_3 = vec2(0.125, 0.015625);\n    vec2 slice1Offset = FLT_flutter_local_computeSliceOffset(param_2, param_3);\n    vec2 slicePixelSize = vec2(0.015625, 0.001953125);\n    vec2 sliceInnerSize = slicePixelSize * 7.0;\n    vec2 uv = (slicePixelSize * 0.5) + (textureColor.xy * sliceInnerSize);\n    vec2 texPos1 = slice0Offset + uv;\n    vec2 texPos2 = slice1Offset + uv;\n    vec4 slice0Color = inputTextureCubeData.eval(inputTextureCubeData_size * ( texPos1));\n    vec4 slice1Color = inputTextureCubeData.eval(inputTextureCubeData_size * ( texPos2));\n    return mix(slice0Color, slice1Color, vec4(zOffset));\n}\n\nvec4 FLT_flutter_local_processColor(vec4 sourceColor)\n{\n    vec3 param = clamp(sourceColor.xyz, vec3(0.0), vec3(1.0));\n    vec4 newColor = FLT_flutter_local_sampleAs3DTexture(param);\n    return mix(sourceColor, vec4(newColor.xyz, sourceColor.w), vec4(inputIntensity));\n}\n\nvoid FLT_main()\n{\n    vec2 textureCoordinate = FLT_flutter_local_FlutterFragCoord() / screenSize;\n    vec4 textureColor = inputImageTexture.eval(inputImageTexture_size * ( textureCoordinate));\n    vec4 param_1 = textureColor;\n    fragColor = FLT_flutter_local_processColor(param_1);\n}\n\nhalf4 main(float2 iFragCoord)\n{\n      flutter_FragCoord = float4(iFragCoord, 0, 0);\n      FLT_main();\n      return fragColor;\n}\n",
    "stage": 1,
    "uniforms": [
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 0,
        "name": "inputIntensity",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 0,
        "columns": 1,
        "location": 0,
        "name": "inputImageTexture",
        "rows": 1,
        "type": 12
      },
      {
        "array_elements": 0,
        "bit_width": 0,
        "columns": 1,
        "location": 1,
        "name": "inputTextureCubeData",
        "rows": 1,
        "type": 12
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 1,
        "name": "screenSize",
        "rows": 2,
        "type": 10
      }
    ]
  }
}