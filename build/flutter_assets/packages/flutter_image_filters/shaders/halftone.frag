{
  "sksl": {
    "entrypoint": "halftone_fragment_main",
    "shader": "// This SkSL shader is autogenerated by spirv-cross.\n\nfloat4 flutter_FragCoord;\n\nuniform float inputFractionalWidthOfPixel;\nuniform float inputAspectRatio;\nuniform vec2 screenSize;\nuniform shader inputImageTexture;\nuniform half2 inputImageTexture_size;\n\nvec4 fragColor;\n\nvec2 FLT_flutter_local_FlutterFragCoord()\n{\n    return flutter_FragCoord.xy;\n}\n\nvoid FLT_main()\n{\n    vec2 textureCoordinate = FLT_flutter_local_FlutterFragCoord() / screenSize;\n    vec2 sampleDivisor = vec2(inputFractionalWidthOfPixel, inputFractionalWidthOfPixel / inputAspectRatio);\n    vec2 samplePos = (textureCoordinate - mod(textureCoordinate, sampleDivisor)) + (sampleDivisor * 0.5);\n    vec2 textureCoordinateToUse = vec2(textureCoordinate.x, ((textureCoordinate.y * inputAspectRatio) + 0.5) - (0.5 * inputAspectRatio));\n    vec2 adjustedSamplePos = vec2(samplePos.x, ((samplePos.y * inputAspectRatio) + 0.5) - (0.5 * inputAspectRatio));\n    float distanceFromSamplePoint = distance(adjustedSamplePos, textureCoordinateToUse);\n    vec3 sampledColor = inputImageTexture.eval(inputImageTexture_size * ( samplePos)).xyz;\n    float dotScaling = 1.0 - dot(sampledColor, vec3(0.2125000059604644775390625, 0.7153999805450439453125, 0.07209999859333038330078125));\n    float checkForPresenceWithinDot = 1.0 - step(distanceFromSamplePoint, (inputFractionalWidthOfPixel * 0.5) * dotScaling);\n    fragColor = vec4(vec3(checkForPresenceWithinDot), 1.0);\n}\n\nhalf4 main(float2 iFragCoord)\n{\n      flutter_FragCoord = float4(iFragCoord, 0, 0);\n      FLT_main();\n      return fragColor;\n}\n",
    "stage": 1,
    "uniforms": [
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 0,
        "name": "inputFractionalWidthOfPixel",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 0,
        "columns": 1,
        "location": 0,
        "name": "inputImageTexture",
        "rows": 1,
        "type": 12
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 1,
        "name": "inputAspectRatio",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 2,
        "name": "screenSize",
        "rows": 2,
        "type": 10
      }
    ]
  }
}